{
  "swagger": "2.0",
  "info": {
    "title": "Nonovium VCMS API",
    "contact": { "url": "https://nonovium.com" },
    "x-logo": { "url": "../../static/images/logo_dark.svg" },
    "version": "v1"
  },
  "host": "localhost",
  "schemes": ["http"],
  "basePath": "/api/v1",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": { "Basic": { "type": "basic" } },
  "security": [{ "Basic": [] }],
  "paths": {
    "/categories": {
      "get": {
        "operationId": "categories_list",
        "summary": "Lists Categories",
        "description": "Lists all categories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "response description",
            "schema": { "$ref": "#/definitions/Category" }
          }
        },
        "tags": ["Categories"]
      },
      "parameters": []
    },
    "/comments": {
      "get": {
        "operationId": "comments_list",
        "summary": "Lists Comments",
        "description": "Paginated listing of all comments",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer"
          },
          {
            "name": "author",
            "in": "query",
            "description": "username",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response description",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Comment" }
            }
          }
        },
        "tags": ["Comments"]
      },
      "parameters": []
    },
    "/encode_profiles/": {
      "get": {
        "operationId": "encode_profiles_list",
        "summary": "List Encoding Profiles",
        "description": "Lists all encoding profiles for videos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/EncodeProfile" }
            }
          }
        },
        "tags": ["Encoding Profiles"]
      },
      "parameters": []
    },
    "/login": {
      "post": {
        "operationId": "login_create",
        "summary": "Login url",
        "description": "Login url endpoint. According to what the portal provides, you may provide username and/or email, plus the password",
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "username",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "email",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user details",
            "schema": { "$ref": "#/definitions/Login" }
          },
          "404": { "description": "Bad request" }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Users"]
      },
      "parameters": []
    },
    "/manage_comments": {
      "get": {
        "operationId": "manage_comments_list",
        "summary": "Manage Comments",
        "description": "Manage comments for VCMS managers and reviewers",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Manage"]
      },
      "delete": {
        "operationId": "manage_comments_delete",
        "summary": "Delete Comments",
        "description": "Delete comments for VCMS managers and reviewers",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Manage"]
      },
      "parameters": []
    },
    "/manage_media": {
      "get": {
        "operationId": "manage_media_list",
        "summary": "Manage Media",
        "description": "Manage media for VCMS managers and reviewers",
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by any of: title, add_date, edit_date, views, likes, reported_times",
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Order by: asc, desc",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Media state, options: private\", \"public\", \"unlisted",
            "type": "string"
          },
          {
            "name": "encoding_status",
            "in": "query",
            "description": "Encoding status, options \"pending\", \"running\", \"fail\", \"success\"",
            "type": "string"
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Manage"]
      },
      "delete": {
        "operationId": "manage_media_delete",
        "summary": "Delete Media",
        "description": "Delete media for VCMS managers and reviewers",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Manage"]
      },
      "parameters": []
    },
    "/manage_users": {
      "get": {
        "operationId": "manage_users_list",
        "summary": "Manage Users",
        "description": "Manage users for VCMS managers and reviewers",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Manage"]
      },
      "delete": {
        "operationId": "manage_users_delete",
        "summary": "Delete Users",
        "description": "Delete users for VCMS managers",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Manage"]
      },
      "parameters": []
    },
    "/media/": {
      "get": {
        "operationId": "media_list",
        "summary": "List Media",
        "description": "Lists all media",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer"
          },
          {
            "name": "author",
            "in": "query",
            "description": "username",
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "show",
            "type": "string",
            "enum": ["recommended", "featured", "latest"]
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Media" }
            }
          }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Media"]
      },
      "post": {
        "operationId": "media_create",
        "summary": "Add new Media",
        "description": "Adds a new media, for authenticated users",
        "parameters": [
          {
            "name": "media_file",
            "in": "formData",
            "description": "media_file",
            "required": true,
            "type": "file"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "description",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "title",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "response description",
            "schema": { "$ref": "#/definitions/Media" }
          },
          "401": { "description": "bad request" }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Media"]
      },
      "parameters": []
    },
    "/media/{friendly_token}": {
      "get": {
        "operationId": "media_read",
        "summary": "Get information for Media",
        "description": "Get information for a media",
        "parameters": [
          {
            "name": "friendly_token",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": { "$ref": "#/definitions/SingleMedia" }
          },
          "400": { "description": "bad request" }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Media"]
      },
      "post": {
        "operationId": "media_manager_actions",
        "summary": "Run action on Media",
        "description": "Actions for a media, for VCMS editors and managers",
        "parameters": [
          {
            "name": "friendly_token",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "action to perform",
            "type": "string",
            "enum": ["encode", "review"]
          },
          {
            "name": "encoding_profiles",
            "in": "formData",
            "description": "if action to perform is encode, need to specify list of ids of encoding profiles",
            "type": "array",
            "items": { "type": "string" }
          },
          {
            "name": "result",
            "in": "formData",
            "description": "if action is review, this is the result (True for reviewed, False for not reviewed)",
            "type": "boolean"
          }
        ],
        "responses": {
          "201": { "description": "action created" },
          "400": { "description": "bad request" }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Media"]
      },
      "put": {
        "operationId": "media_update",
        "summary": "Update Media",
        "description": "Update a Media, for Media uploader",
        "parameters": [
          {
            "name": "description",
            "in": "formData",
            "description": "description",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "title",
            "required": false,
            "type": "string"
          },
          {
            "name": "media_file",
            "in": "formData",
            "description": "media_file",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "response description",
            "schema": { "$ref": "#/definitions/Media" }
          },
          "401": { "description": "bad request" }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Media"]
      },
      "delete": {
        "operationId": "media_delete",
        "summary": "Delete Media",
        "description": "Delete a Media, for VCMS editors and managers",
        "parameters": [
          {
            "name": "friendly_token",
            "in": "path",
            "description": "unique identifier",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "204": { "description": "no content" } },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Media"]
      },
      "parameters": [
        {
          "name": "friendly_token",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/media/{friendly_token}/actions": {
      "get": {
        "operationId": "media_actions_list",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Media"]
      },
      "post": {
        "operationId": "media_actions_create",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Media"]
      },
      "delete": {
        "operationId": "media_actions_delete",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Media"]
      },
      "parameters": [
        {
          "name": "friendly_token",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/media/{friendly_token}/comments": {
      "get": {
        "operationId": "media_comments_list",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Media"]
      },
      "post": {
        "operationId": "media_comments_create",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Media"]
      },
      "delete": {
        "operationId": "media_comments_delete",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Media"]
      },
      "parameters": [
        {
          "name": "friendly_token",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/media/{friendly_token}/comments/{uid}": {
      "get": {
        "operationId": "media_comments_read",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Media"]
      },
      "post": {
        "operationId": "media_comments_create",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Media"]
      },
      "delete": {
        "operationId": "media_comments_delete",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Media"]
      },
      "parameters": [
        {
          "name": "friendly_token",
          "in": "path",
          "required": true,
          "type": "string"
        },
        { "name": "uid", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/playlists": {
      "get": {
        "operationId": "playlists_list",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": {
          "200": {
            "description": "response description",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Playlist" }
            }
          }
        },
        "tags": ["Playlists"]
      },
      "post": {
        "operationId": "playlists_create",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Playlists"]
      },
      "parameters": []
    },
    "/playlists/": {
      "get": {
        "operationId": "playlists_list",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": {
          "200": {
            "description": "response description",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Playlist" }
            }
          }
        },
        "tags": ["Playlists"]
      },
      "post": {
        "operationId": "playlists_create",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Playlists"]
      },
      "parameters": []
    },
    "/playlists/{friendly_token}": {
      "get": {
        "operationId": "playlists_read",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Playlists"]
      },
      "post": {
        "operationId": "playlists_create",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Playlists"]
      },
      "put": {
        "operationId": "playlists_update",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Playlists"]
      },
      "delete": {
        "operationId": "playlists_delete",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "tags": ["Playlists"]
      },
      "parameters": [
        {
          "name": "friendly_token",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/search": {
      "get": {
        "operationId": "search_list",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Search"]
      },
      "parameters": []
    },
    "/tags": {
      "get": {
        "operationId": "tags_list",
        "summary": "Lists Tags",
        "description": "Paginated listing of all tags",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "response description",
            "schema": { "$ref": "#/definitions/Tag" }
          }
        },
        "tags": ["Tags"]
      },
      "parameters": []
    },
    "/user/action/{action}": {
      "get": {
        "operationId": "user_action_read",
        "summary": "List user actions",
        "description": "Lists user actions",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "description": "action",
            "required": true,
            "type": "string",
            "enum": ["like", "dislike", "watch", "report", "rate"]
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Users"]
      },
      "parameters": [
        { "name": "action", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/user/token": {
      "get": {
        "operationId": "user_token_list",
        "summary": "Get a user token",
        "description": "Returns an authenticated user's token",
        "parameters": [],
        "responses": {
          "200": { "description": "token" },
          "403": { "description": "Forbidden" }
        },
        "tags": ["Users"]
      },
      "parameters": []
    },
    "/users": {
      "get": {
        "operationId": "users_list",
        "summary": "List users",
        "description": "Paginated listing of users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer"
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Users"]
      },
      "parameters": []
    },
    "/users/": {
      "get": {
        "operationId": "users_list",
        "summary": "List users",
        "description": "Paginated listing of users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer"
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Users"]
      },
      "parameters": []
    },
    "/users/{username}": {
      "get": {
        "operationId": "users_read",
        "summary": "List user details",
        "description": "Get user details",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": { "200": { "description": "" } },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Users"]
      },
      "post": {
        "operationId": "users_create",
        "summary": "Edit user details",
        "description": "Post user details - authenticated view",
        "parameters": [
          {
            "name": "logo",
            "in": "formData",
            "description": "logo",
            "required": true,
            "type": "file"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "description",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "response description",
            "schema": { "$ref": "#/definitions/UserDetail" }
          },
          "400": { "description": "bad request" }
        },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Users"]
      },
      "put": {
        "operationId": "users_update",
        "summary": "Xto_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Users"]
      },
      "delete": {
        "operationId": "users_delete",
        "summary": "to_be_written",
        "description": "to_be_written",
        "parameters": [],
        "responses": { "204": { "description": "" } },
        "consumes": [
          "multipart/form-data",
          "application/x-www-form-urlencoded"
        ],
        "tags": ["Users"]
      },
      "parameters": [
        { "name": "username", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/users/{username}/contact": {
      "post": {
        "operationId": "users_contact_create",
        "summary": "Contact user",
        "description": "Contact user through email, if user has set this option",
        "parameters": [],
        "responses": { "201": { "description": "" } },
        "tags": ["Users"]
      },
      "parameters": [
        { "name": "username", "in": "path", "required": true, "type": "string" }
      ]
    },
    "/whoami": {
      "get": {
        "operationId": "whoami_read",
        "summary": "Whoami user information",
        "description": "Whoami user information",
        "parameters": [],
        "responses": {
          "200": {
            "description": "response description",
            "schema": { "$ref": "#/definitions/UserDetail" }
          },
          "403": { "description": "Forbidden" }
        },
        "tags": ["Users"]
      },
      "parameters": []
    }
  },
  "definitions": {
    "Category": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "description": { "title": "Description", "type": "string" },
        "is_global": {
          "title": "Is global",
          "description": "global categories or user specific",
          "type": "boolean"
        },
        "media_count": {
          "title": "Media count",
          "description": "number of media",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "user": { "title": "User", "type": "string", "readOnly": true },
        "thumbnail_url": {
          "title": "Thumbnail url",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Comment": {
      "required": ["text"],
      "type": "object",
      "properties": {
        "add_date": {
          "title": "Add date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "text": {
          "title": "Text",
          "description": "text",
          "type": "string",
          "minLength": 1
        },
        "parent": { "title": "Parent", "type": "integer", "x-nullable": true },
        "author_thumbnail_url": {
          "title": "Author thumbnail url",
          "type": "string",
          "readOnly": true
        },
        "author_profile": {
          "title": "Author profile",
          "type": "string",
          "readOnly": true
        },
        "author_name": {
          "title": "Author name",
          "type": "string",
          "readOnly": true
        },
        "media_url": {
          "title": "Media url",
          "type": "string",
          "readOnly": true
        },
        "uid": {
          "title": "Uid",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        }
      }
    },
    "EncodeProfile": {
      "required": ["name", "extension"],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 90,
          "minLength": 1
        },
        "extension": {
          "title": "Extension",
          "type": "string",
          "enum": ["mp4", "webm", "gif"]
        },
        "resolution": {
          "title": "Resolution",
          "type": "integer",
          "enum": [2160, 1440, 1080, 720, 480, 360, 240],
          "x-nullable": true
        },
        "codec": {
          "title": "Codec",
          "type": "string",
          "enum": ["h265", "h264", "vp9"],
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "description": "description",
          "type": "string"
        }
      }
    },
    "Login": {
      "required": ["password"],
      "type": "object",
      "properties": {
        "email": {
          "title": "Email",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "username": {
          "title": "Username",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "password": {
          "title": "Password",
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "token": {
          "title": "Token",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "Media": {
      "type": "object",
      "properties": {
        "friendly_token": {
          "title": "Friendly token",
          "description": "Identifier for the Media",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "url": { "title": "Url", "type": "string", "readOnly": true },
        "api_url": { "title": "Api url", "type": "string", "readOnly": true },
        "user": { "title": "User", "type": "string", "readOnly": true },
        "title": {
          "title": "Title",
          "description": "media title",
          "type": "string",
          "maxLength": 100
        },
        "description": { "title": "Description", "type": "string" },
        "add_date": {
          "title": "Date produced",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "views": { "title": "Views", "type": "integer", "readOnly": true },
        "media_type": {
          "title": "Media type",
          "type": "string",
          "enum": ["video", "image", "pdf", "audio"],
          "readOnly": true
        },
        "state": {
          "title": "State",
          "description": "state of Media",
          "type": "string",
          "enum": ["private", "public", "unlisted"],
          "readOnly": true
        },
        "duration": {
          "title": "Duration",
          "type": "integer",
          "readOnly": true
        },
        "thumbnail_url": {
          "title": "Thumbnail url",
          "type": "string",
          "readOnly": true
        },
        "is_reviewed": {
          "title": "Is reviewed",
          "description": "Whether media is reviewed, so it can appear on public listings",
          "type": "boolean",
          "readOnly": true
        },
        "preview_url": {
          "title": "Preview url",
          "type": "string",
          "readOnly": true
        },
        "author_name": {
          "title": "Author name",
          "type": "string",
          "readOnly": true
        },
        "author_profile": {
          "title": "Author profile",
          "type": "string",
          "readOnly": true
        },
        "author_thumbnail": {
          "title": "Author thumbnail",
          "type": "string",
          "readOnly": true
        },
        "encoding_status": {
          "title": "Encoding status",
          "type": "string",
          "enum": ["pending", "running", "fail", "success"],
          "readOnly": true
        },
        "likes": { "title": "Likes", "type": "integer", "readOnly": true },
        "dislikes": {
          "title": "Dislikes",
          "type": "integer",
          "readOnly": true
        },
        "reported_times": {
          "title": "Reported times",
          "description": "how many time a media is reported",
          "type": "integer",
          "readOnly": true
        },
        "featured": {
          "title": "Featured",
          "description": "Whether media is globally featured by a VCMS editor",
          "type": "boolean",
          "readOnly": true
        },
        "user_featured": {
          "title": "User featured",
          "description": "Featured by the user",
          "type": "boolean"
        },
        "size": {
          "title": "Size",
          "description": "media size in bytes, automatically calculated",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "SingleMedia": {
      "type": "object",
      "properties": {
        "url": { "title": "Url", "type": "string", "readOnly": true },
        "user": { "title": "User", "type": "string", "readOnly": true },
        "title": {
          "title": "Title",
          "description": "media title",
          "type": "string",
          "maxLength": 100
        },
        "description": { "title": "Description", "type": "string" },
        "add_date": {
          "title": "Date produced",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "edit_date": {
          "title": "Edit date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "media_type": {
          "title": "Media type",
          "type": "string",
          "enum": ["video", "image", "pdf", "audio"],
          "readOnly": true
        },
        "state": {
          "title": "State",
          "description": "state of Media",
          "type": "string",
          "enum": ["private", "public", "unlisted"],
          "readOnly": true
        },
        "duration": {
          "title": "Duration",
          "type": "integer",
          "readOnly": true
        },
        "thumbnail_url": {
          "title": "Thumbnail url",
          "type": "string",
          "readOnly": true
        },
        "poster_url": {
          "title": "Poster url",
          "type": "string",
          "readOnly": true
        },
        "thumbnail_time": {
          "title": "Thumbnail time",
          "description": "Time on video that a thumbnail will be taken",
          "type": "number",
          "x-nullable": true
        },
        "sprites_url": {
          "title": "Sprites url",
          "type": "string",
          "readOnly": true
        },
        "preview_url": {
          "title": "Preview url",
          "type": "string",
          "readOnly": true
        },
        "author_name": {
          "title": "Author name",
          "type": "string",
          "readOnly": true
        },
        "author_profile": {
          "title": "Author profile",
          "type": "string",
          "readOnly": true
        },
        "author_thumbnail": {
          "title": "Author thumbnail",
          "type": "string",
          "readOnly": true
        },
        "encodings_info": {
          "title": "Encodings info",
          "type": "string",
          "readOnly": true
        },
        "encoding_status": {
          "title": "Encoding status",
          "type": "string",
          "enum": ["pending", "running", "fail", "success"],
          "readOnly": true
        },
        "views": { "title": "Views", "type": "integer", "readOnly": true },
        "likes": { "title": "Likes", "type": "integer", "readOnly": true },
        "dislikes": {
          "title": "Dislikes",
          "type": "integer",
          "readOnly": true
        },
        "reported_times": {
          "title": "Reported times",
          "description": "how many time a media is reported",
          "type": "integer",
          "readOnly": true
        },
        "user_featured": {
          "title": "User featured",
          "description": "Featured by the user",
          "type": "boolean"
        },
        "original_media_url": {
          "title": "Original media url",
          "type": "string",
          "readOnly": true
        },
        "size": {
          "title": "Size",
          "description": "media size in bytes, automatically calculated",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "video_height": {
          "title": "Video height",
          "type": "integer",
          "readOnly": true
        },
        "enable_comments": {
          "title": "Enable comments",
          "description": "Whether comments will be allowed for this media",
          "type": "boolean"
        },
        "categories_info": {
          "title": "Categories info",
          "type": "string",
          "readOnly": true
        },
        "is_reviewed": {
          "title": "Is reviewed",
          "description": "Whether media is reviewed, so it can appear on public listings",
          "type": "boolean",
          "readOnly": true
        },
        "edit_url": { "title": "Edit url", "type": "string", "readOnly": true },
        "tags_info": {
          "title": "Tags info",
          "type": "string",
          "readOnly": true
        },
        "hls_info": { "title": "Hls info", "type": "string", "readOnly": true },
        "license": {
          "title": "License",
          "type": "integer",
          "x-nullable": true
        },
        "subtitles_info": {
          "title": "Subtitles info",
          "type": "string",
          "readOnly": true
        },
        "ratings_info": {
          "title": "Ratings info",
          "type": "string",
          "readOnly": true
        },
        "add_subtitle_url": {
          "title": "Add subtitle url",
          "type": "string",
          "readOnly": true
        },
        "allow_download": {
          "title": "Allow download",
          "description": "Whether option to download media is shown",
          "type": "boolean"
        }
      }
    },
    "Playlist": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "add_date": {
          "title": "Add date",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "description": "description",
          "type": "string"
        },
        "user": { "title": "User", "type": "string", "readOnly": true },
        "media_count": {
          "title": "Media count",
          "type": "string",
          "readOnly": true
        },
        "url": { "title": "Url", "type": "string", "readOnly": true },
        "api_url": { "title": "Api url", "type": "string", "readOnly": true },
        "thumbnail_url": {
          "title": "Thumbnail url",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Tag": {
      "required": ["title"],
      "type": "object",
      "properties": {
        "title": {
          "title": "Title",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "media_count": {
          "title": "Media count",
          "description": "number of media",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "thumbnail_url": {
          "title": "Thumbnail url",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UserDetail": {
      "type": "object",
      "properties": {
        "description": { "title": "About me", "type": "string" },
        "date_added": {
          "title": "Date added",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Full name",
          "type": "string",
          "maxLength": 250,
          "minLength": 1
        },
        "is_featured": {
          "title": "Is featured",
          "type": "boolean",
          "readOnly": true
        },
        "thumbnail_url": {
          "title": "Thumbnail url",
          "type": "string",
          "readOnly": true
        },
        "banner_thumbnail_url": {
          "title": "Banner thumbnail url",
          "type": "string",
          "readOnly": true
        },
        "url": { "title": "Url", "type": "string", "readOnly": true },
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "media_info": {
          "title": "Media info",
          "type": "string",
          "readOnly": true
        },
        "api_url": { "title": "Api url", "type": "string", "readOnly": true },
        "edit_url": { "title": "Edit url", "type": "string", "readOnly": true },
        "default_channel_edit_url": {
          "title": "Default channel edit url",
          "type": "string",
          "readOnly": true
        }
      }
    }
  }
}
